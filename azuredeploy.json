{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"location": {
			"type": "string",
			"defaultValue": "WestUS2"
		},
		"databaseServer": {
			"type": "string",
			"defaultValue": "[concat('directus-', uniqueString(resourceGroup().id))]",
			"metadata": {
				"description": "Azure SQL Database Server"
			}
		},
		"databaseAdministratorLogin": {
			"type": "string",
			"defaultValue": "directus",
			"metadata": {
				"description": "Azure SQL Database admin user name"
			}
		},
		"databaseAdministratorLoginPassword": {
			"type": "secureString",
			"defaultValue": "AzUR3SqL_PAzzw0rd!",
			"metadata": {
				"description": "Azure SQL Database admin password"
			}
		},
		"directusAdministratorEmail": {
			"type": "string",
			"metadata": {
				"description": "Directus administrative account email"
			}
		},
		"directusAdministratorPassword": {
			"type": "secureString",
			"metadata": {
				"description": "Directus administrative account password"
			}
		},
		"serverFarmName": {
			"type": "string",
			"defaultValue": "directus",
			"metadata": {
				"description": "Name of the Server Farm that will host the App Service instance"
			}
		},
		"storageAccountName": {
			"type": "string",
			"defaultValue": "[concat('directus', uniqueString(resourceGroup().id))]",
			"metadata": {
				"description": "Name of the Storage Account that will host the Storage Container for file uploads"
			}
		},
		"storageContainerName": {
			"type": "string",
			"defaultValue": "[concat('directus-', uniqueString(resourceGroup().id))]",
			"metadata": {
				"description": "Name of the Storage Container that will host the file uploads"
			}
		},
		"siteName": {
			"type": "string",
			"defaultValue": "[concat('directus-', uniqueString(resourceGroup().id))]",
			"metadata": {
				"description": "The name of the web app that you wish to create."
			}
		}
	},
	"resources": [
		{
			"type": "Microsoft.Sql/servers",
			"apiVersion": "2021-02-01-preview",
			"name": "[parameters('databaseServer')]",
			"location": "[parameters('location')]",
			"kind": "v12.0",
			"properties": {
				"administratorLogin": "[parameters('databaseAdministratorLogin')]",
				"administratorLoginPassword": "[parameters('databaseAdministratorLoginPassword')]",
				"version": "12.0",
				"minimalTlsVersion": "1.2",
				"publicNetworkAccess": "Enabled",
				"restrictOutboundNetworkAccess": "Disabled"
			}
		},
		{
			"type": "Microsoft.Sql/servers/databases",
			"apiVersion": "2021-02-01-preview",
			"name": "[concat(parameters('databaseServer'), '/directus')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Sql/servers', parameters('databaseServer'))]"
			],
			"sku": {
				"name": "GP_S_Gen5",
				"tier": "GeneralPurpose",
				"family": "Gen5",
				"capacity": 1
			},
			"kind": "v12.0,user,vcore,serverless",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 1073741824,
				"catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
				"zoneRedundant": false,
				"readScale": "Disabled",
				"autoPauseDelay": 60,
				"requestedBackupStorageRedundancy": "Geo",
				"minCapacity": 0.5,
				"isLedgerOn": false
			}
		},
		{
			"type": "Microsoft.Sql/servers/firewallRules",
			"apiVersion": "2021-02-01-preview",
			"name": "[concat(parameters('databaseServer'), '/AllowAllWindowsAzureIps')]",
			"dependsOn": [
				"[resourceId('Microsoft.Sql/servers', parameters('databaseServer'))]"
			],
			"properties": {
				"startIpAddress": "0.0.0.0",
				"endIpAddress": "0.0.0.0"
			}
		},
		{
			"type": "Microsoft.Web/serverfarms",
			"apiVersion": "2018-02-01",
			"name": "[parameters('serverFarmName')]",
			"location": "[parameters('location')]",
			"sku": {
				"name": "B1",
				"tier": "Basic",
				"size": "B1",
				"family": "B",
				"capacity": 1
			},
			"kind": "linux",
			"properties": {
				"perSiteScaling": false,
				"maximumElasticWorkerCount": 1,
				"isSpot": false,
				"reserved": true,
				"isXenon": false,
				"hyperV": false,
				"targetWorkerCount": 0,
				"targetWorkerSizeId": 0
			}
		},
		{
			"type": "Microsoft.Web/sites",
			"apiVersion": "2018-11-01",
			"name": "[parameters('siteName')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Web/serverfarms', parameters('serverFarmName'))]"
			],
			"kind": "app,linux,container",
			"properties": {
				"enabled": true,
				"hostNameSslStates": [
					{
						"name": "[concat(parameters('siteName'), '.azurewebsites.net')]",
						"sslState": "Disabled",
						"hostType": "Standard"
					},
					{
						"name": "[concat(parameters('siteName'), '.scm.azurewebsites.net')]",
						"sslState": "Disabled",
						"hostType": "Repository"
					}
				],
				"serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverFarmName'))]",
				"reserved": true,
				"isXenon": false,
				"hyperV": false,
				"siteConfig": {
					"numberOfWorkers": 1,
					"linuxFxVersion": "DOCKER|directus/directus:9.0.0-rc.94",
					"alwaysOn": false,
					"http20Enabled": false
				},
				"scmSiteAlsoStopped": false,
				"clientAffinityEnabled": false,
				"clientCertEnabled": false,
				"hostNamesDisabled": false,
				"containerSize": 0,
				"dailyMemoryTimeQuota": 0,
				"httpsOnly": false,
				"redundancyMode": "None"
			}
		},
		{
			"type": "Microsoft.Web/sites/config",
			"apiVersion": "2018-11-01",
			"name": "[concat(parameters('siteName'), '/web')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Web/sites', parameters('siteName'))]"
			],
			"properties": {
				"appSettings": [
					{
						"name": "ADMIN_EMAIL",
						"value": "[parameters('directusAdministratorEmail')]"
					},
					{
						"name": "ADMIN_PASSWORD",
						"value": "[parameters('directusAdministratorPassword')]"
					},
					{
						"name": "DB_CLIENT",
						"value": "mssql"
					},
					{
						"name": "DB_HOST",
						"value": "[concat(parameters('databaseServer'), '.database.windows.net')]"
					},
					{
						"name": "DB_PORT",
						"value": 1433
					},
					{
						"name": "DB_DATABASE",
						"value": "directus"
					},
					{
						"name": "DB_USER",
						"value": "[parameters('databaseAdministratorLogin')]"
					},
					{
						"name": "DB_PASSWORD",
						"value": "[parameters('databaseAdministratorLoginPassword')]"
					},
					{
						"name": "DB_OPTIONS__ENCRYPT",
						"value": "true"
					},
					{
						"name": "STORAGE_LOCATIONS",
						"value": "azure"
					},
					{
						"name": "STORAGE_AZURE_DRIVER",
						"value": "azure"
					},
					{
						"name": "STORAGE_AZURE_CONTAINER_NAME",
						"value": "[parameters('storageContainerName')]"
					},
					{
						"name": "STORAGE_AZURE_ACCOUNT_NAME",
						"value": "[parameters('storageAccountName')]"
					},
					{
						"name": "STORAGE_AZURE_ACCOUNT_KEY",
						"value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-04-01').keys[0].value]"
					},
					{
						"name": "CACHE_ENABLED",
						"value": false
					},
					{
						"name": "PUBLIC_URL",
						"value": "[concat('https://', parameters('siteName'), '.azurewebsites.net')]"
					},
					{
						"name": "RATE_LIMITER_ENABLED",
						"value": false
					},
					{
						"name": "KEY",
						"value": "[guid(resourceGroup().id)]"
					},
					{
						"name": "SECRET",
						"value": "[concat(uniqueString(resourceGroup().id), uniqueString(guid(resourceGroup().id)))]"
					}
				],
				"numberOfWorkers": 1,
				"defaultDocuments": [
					"Default.htm",
					"Default.html",
					"Default.asp",
					"index.htm",
					"index.html",
					"iisstart.htm",
					"default.aspx",
					"index.php",
					"hostingstart.html"
				],
				"netFrameworkVersion": "v4.0",
				"linuxFxVersion": "DOCKER|directus/directus:9.0.0-rc.94",
				"requestTracingEnabled": false,
				"remoteDebuggingEnabled": false,
				"remoteDebuggingVersion": "VS2019",
				"httpLoggingEnabled": true,
				"logsDirectorySizeLimit": 35,
				"detailedErrorLoggingEnabled": true,
				"azureStorageAccounts": {},
				"scmType": "None",
				"use32BitWorkerProcess": true,
				"webSocketsEnabled": false,
				"alwaysOn": false,
				"managedPipelineMode": "Integrated",
				"virtualApplications": [
					{
						"virtualPath": "/",
						"physicalPath": "site\\wwwroot",
						"preloadEnabled": false
					}
				],
				"loadBalancing": "LeastRequests",
				"experiments": {
					"rampUpRules": []
				},
				"autoHealEnabled": false,
				"localMySqlEnabled": false,
				"ipSecurityRestrictions": [
					{
						"ipAddress": "Any",
						"action": "Allow",
						"priority": 1,
						"name": "Allow all",
						"description": "Allow all access"
					}
				],
				"scmIpSecurityRestrictions": [
					{
						"ipAddress": "Any",
						"action": "Allow",
						"priority": 1,
						"name": "Allow all",
						"description": "Allow all access"
					}
				],
				"scmIpSecurityRestrictionsUseMain": false,
				"http20Enabled": false,
				"minTlsVersion": "1.2",
				"ftpsState": "AllAllowed",
				"reservedInstanceCount": 0
			}
		},
		{
			"type": "Microsoft.Web/sites/hostNameBindings",
			"apiVersion": "2018-11-01",
			"name": "[concat(parameters('siteName'), '/', parameters('siteName'), '.azurewebsites.net')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Web/sites', parameters('siteName'))]"
			],
			"properties": {
				"siteName": "[parameters('siteName')]",
				"hostNameType": "Verified"
			}
		},
		{
			"name": "[parameters('storageAccountName')]",
			"type": "Microsoft.Storage/storageAccounts",
			"apiVersion": "2021-02-01",
			"location": "[parameters('location')]",
			"sku": {
				"name": "Standard_RAGRS",
				"tier": "Standard"
			},
			"kind": "StorageV2",
			"properties": {
				"minimumTlsVersion": "TLS1_2",
				"allowBlobPublicAccess": false,
				"allowSharedKeyAccess": true,
				"supportsHttpsTrafficOnly": true,
				"encryption": {
					"services": {
						"file": {
							"keyType": "Account",
							"enabled": true
						},
						"blob": {
							"keyType": "Account",
							"enabled": true
						}
					},
					"keySource": "Microsoft.Storage"
				},
				"accessTier": "Hot"
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts/blobServices",
			"apiVersion": "2021-04-01",
			"name": "[concat(parameters('storageAccountName'), '/default')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
			],
			"sku": {
				"name": "Standard_RAGRS",
				"tier": "Standard"
			},
			"properties": {
				"changeFeed": {
					"enabled": false
				},
				"restorePolicy": {
					"enabled": false
				},
				"containerDeleteRetentionPolicy": {
					"enabled": true,
					"days": 7
				},
				"cors": {
					"corsRules": []
				},
				"deleteRetentionPolicy": {
					"enabled": true,
					"days": 7
				},
				"isVersioningEnabled": false
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts/blobServices/containers",
			"apiVersion": "2021-04-01",
			"name": "[concat(parameters('storageAccountName'), '/default/', parameters('storageContainerName'))]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]",
				"[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
			],
			"properties": {
				"defaultEncryptionScope": "$account-encryption-key",
				"denyEncryptionScopeOverride": false,
				"publicAccess": "None"
			}
		}
	],
	"outputs": {
		"uniqueId": {
			"type": "string",
			"value": "[uniqueString(resourceGroup().id)]"
		}
	}
}
